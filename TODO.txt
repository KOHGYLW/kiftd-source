kiftd项目 计划表-2019-08-05 by 青阳龙野

已完成 v1.0.17
--------------
【已完成】更多视频文件格式的在线播放！这也是关于在线播放模块呼声最高的提议。
——通过在在线播放模块中集成JAVE多媒体解码器，现在，用户可以直接在线播放mp4/mov/wmv/flv/mkv/webm/avi格式的全部视频了。
【已完成】增强搜索！全局搜索功能已经上线，用户可以在搜索框内输入“all:关键字”来搜索整个路径了（包含子文件夹内）。
【已完成】改进了“下载链接”的分享——现在，指定文件的下载链接将动态生成，持有该链接的用户将可直接下载指定资源（无需再进行权限认证），支持跨域请求。
【已完成】修正了“打包下载”时无法正确压缩文件夹的问题。
【已完成】新增主界面显示缩放比设置功能，方便用户自行调节界面缩放比以适应不同分辨率。
【已完成】优化了上传文件的权限检查机制，现在上传文件不会由于时间过长而导致权限失效了。
【已完成】文件列表中文件名过长时能够自动换行，以避免文字溢出。
【已完成】新增了“返回顶部”按钮——当用户浏览得过于深入底部时，这个按钮可以将其快速带回。
【已完成】统一文件、文件夹的命名规则：名称不能以“.”开头，且不能包含下列任何字符之一：空格 / \ : * ? " < > | & $ （对于空格，推荐使用“_”代替）。
【已完成】修正了搜索输入框中无法输入大写字母的BUG。
【已完成】优化了在线播放在移动端的展示效果。
【已完成】进一步避免文件插入时由于文件编号生成重复而导致的插入失败的问题（实验性）。

已完成 v1.0.18
--------------
【已完成】增加对https的支持——这是确保信息安全的最佳解决而方案，允许高级用户通过SSL证书开启kiftd的加密访问。
该功能目前存在一个问题：对于Chrome浏览器来说，如果关闭了https模式，那么再次用http模式访问就会导致Cookie无法获取。解决方法是关闭并重新开启浏览器。
【已完成】增加验证码机制令密码暴力破解更加困难。当一个账户的密码被输错一次后，下一次的尝试必须提供验证码方可进行。

已完成 v1.0.19
--------------
【已完成】增加定时应答器模块，由此解决播放、上传和下载等长耗时操作中可能导致会话跟踪失效的问题。
【已完成】升级内置JAVE解码引擎。新的引擎能够提供更快的视频解码速度，并能够兼容Java 9+。
【已完成】允许用户自定义登录验证码：标准（较难识别）、简化（容易识别）、关闭（不需要验证码），以满足不同用户的需求。
【已完成】新增用户上传文件的体积限制功能。
【已完成】优化分享链接中文件名的处理方式，解决文件名中包含（# % ?）时浏览器无法正确下载的问题。
【已完成】修复了可能利用文件或文件夹名称来嵌入恶意链接或执行特定js代码的漏洞，避免用户利用此漏洞进行恶意攻击。
【已完成】放宽文件夹名称的长度限制（增至128个字符），方便用户使用长名称命名文件夹。
【已完成】修正了预览空的Word或TXT文档时无法正确打开的问题。
【已完成】增加浏览文件夹路径记忆功能。
当用户打开新窗口或刷新页面时，文件列表直接进入最后一次打开的文件夹路径下（记忆期限至浏览器关闭）。
【已完成】修正了当用户尝试打开一个不存在的文件夹时会导致出现程序出错的问题，当用户试图访问不存在的文件夹时，将直接跳转至根目录。
【已完成】优化MySQL链接设置检查功能：当链接失败时，不再自动将“mysql.enable”一项改为“false”，避免用户因此出现误操作并丢失文件的可能性。
【已完成】修正了文件管理界面在执行拖拽导入时无法正确显示进度的问题。

已完成 v1.0.20
--------------
【已完成】上传文件夹——允许用户直接“上传”文件夹，在保留目录结构的情况下一次性上传文件夹内的所有文件。
该功能是新建文件夹和上传文件的结合版，仅当用户同时具备“上传”和“新建文件夹”权限时才可使用该功能。
【已完成】设置扩展存储区——允许用户最多挂载31个额外存储区，以便在不使用磁盘阵列的情况下，将多个硬盘分区作为kiftd的扩展存储空间使用。
【已完成】PPT预览——ppt/pptx幻灯片预览功能现已加入kiftd豪华预览午餐（是否能正确处理未安装的中文字体仍待验证）。
【已完成】优化了配置检查机制，当配置出现错误时不再自动还原初始配置，方便用户对其进行检查和修改操作。
【已完成】优化了文件列表显示逻辑，将最新上传的文件显示在最上方，便于用户查找。
【已完成】升级文件列表的排序功能——文件列表可以对文件的各项属性进行切换式的双向（升序/降序）排序。
【已完成】进一步增强了文件系统的安全性和稳定性。

已完成 v1.0.21
--------------
【已完成】为特定文件夹设置账户的额外权限——允许管理员为某一账户添加其在特定文件夹中的额外操作权限，从而更加灵活地为账户设定权限。
示例：设置账户test在“test专属”（文件夹ID：xxx）文件夹中除了具备其已有的下载（l）权限外，还额外具备上传（u）、创建文件件（c）和删除（d）的操作权限
...
test.auth=l
test.auth.xxx=ucd
...
【已完成】修复了当文件夹名称中含有空格时无法进行上传的问题。
【已完成】优化了配置文件更新机制，使其在更新配置文件后能够保留配置文件的原有的格式（包括配置顺序和其中的注释）。
【已完成】进一步增强了文件系统的安全性和稳定性。

已完成 v1.0.22
--------------
【已完成】优化了歌词显示功能，使得其能够正确显示使用GBK/GB2312编码的LRC歌词。

已完成 v1.0.23
--------------
【已完成】用户修改密码功能——这是很多用户一直期待加入的功能。现在，管理员只需手动开启该功能，便可以赋予用户自由地修改账户密码的能力了。
【已完成】永久资源链接——当开启该功能后，每个kiftd中的文件均会生成一个永久有效的外部链接，该链接能够随意在其它网站中作为资源引用。
【已完成】自由注册新账户功能（高级）——这也是很多用户一直期待加入的功能。启用该功能后，kiftd将允许访问者自由注册新账户。
设置方法：在【account.properties】账户配置文件中添加“authSignup={权限字符}”设置，其中，{权限字符}可以设置为新账户具备的默认权限。
【已完成】阻止特定IP访问（高级）——当某一IP被设置为禁止访问时，kiftd将直接拒绝来自于该IP的所有请求。
设置方法：在【account.properties】账户配置文件中添加下列设置中的一项：
1，通过添加“IP.banned={IP地址1};{IP地址2}……”来禁止特定IP访问；
2，或者添加“IP.allow={IP地址1};{IP地址2}……”来仅允许特定IP访问。
【已完成】升级了日志记录功能——在日志中增加了操作者IP地址的记录，方便管理员对异常请求的来源进行跟踪。
【已完成】在页面源代码中添加了服务器的版本号，便于管理员查看和升级版本。

已完成 v1.0.24
--------------
【已完成】改进了配置读取规则，从而兼容v1.0.20及更早版本中文件系统路径设置的风格。
【已完成】改进了设置效验流程，当文件系统路径设置不合法时将无法更新设置。
【已完成】优化了服务器图形界面的缩放逻辑，解决了在低分辨率下服务器设置窗口可能显示不全的问题。
【已完成】完善了说明文档。

已完成 v1.0.25
--------------
【已完成】完善文件系统路径检查机制，防止用户设置无法被程序识别的路径而导致系统运行异常。
【已完成】完善日志记录——在永久资源链接的请求日志中增加IP地址的记录，帮助用户准确地掌握永久资源链接的使用情况。
【已完成】进一步强化了新账户注册时的账户名检查机制——禁止新账户名中出现“:”和“=”，避免用户注册程序无法识别的账户名。
【已完成】进一步完善说明文档。

已完成 v1.0.26
--------------
【已完成】优化了修改密码功能，确保在多人同时进行该操作时不会出现文件写入冲突。

已完成 v1.0.27
--------------
【已完成】新增了最大下载速度限制功能：该功能可以为访问者设定最大下载速度限制（{用户名}.maxRate={最大下载速度}{单位}或defaultMaxRate={最大下载速度}{单位}），
从而避免网络带宽资源被单一下载任务占满。例如，“admin.maxRate=2MB”代表将admin账户的最大下载速度限制为2MB/s；“defaultMaxRate=512”代表将默认最大下载速度限
制为512KB/s。
【已完成】新增了主页“公告板”功能（高级），该功能可以将一些重要的公告信息直接显示给所有访问kiftd主页的用户。如需开启该功能，只需在kiftd主目录下创建一个名为
“notice.md”的文档，并在其中写入相应的公告信息即可（该功能还支持使用“Markdown”语法对公告信息进行排版）。
【已完成】优化文件夹视图加载机制——当需要加载的文件列表数目较多时，系统将会分段加载这些数据从而提高页面的响应速度。
【已完成】为内置的ffmpeg引擎增加了操作系统判断和自动禁用机制，并允许用户自行替换ffmpeg引擎文件。当kiftd未找到对应平台的ffmpeg引擎时
将自动禁用在线转码功能，并仅提供原始的视频播放服务，从而避免在线播放功能在特殊的操作系统（例如ARM Linux）上无法使用的问题。
【已完成】修正了文件管理功能在导入本地文件夹时可能导致其无法被任何人访问的问题——现在，本地导入的文件夹将与父级文件夹的创建者相同，
从而确保其父级文件夹的拥有者能够对新导入的文件夹进行访问及操作。
【已完成】增强了“自由注册新账户”功能，除了能够为新账户自动授权外，还可以为新账户自动授予小组（groupSignup={小组名}）。
【已完成】为本地（普通）排序功能添加了等待动画效果，在排序量较大、耗时较长时能够为用户带来更好的使用体验。
【已完成】重构了文件系统的扩展存储区存储机制，使得扩展存储区能够更加合理地分摊文件系统存储压力。现在，用户可以通过添加扩展存储区的方法来避免。
“因单一存储路径下存储过多的文件块而导致系统读取性能下降”或是“因单一文件夹内存放的文件块数量超过本地文件系统允许的最大值而无法继续存入”的问题了。
【已完成】“扩展存储区”的最大数量现已提高到255个，以便更好地应对大数量、大体积文件存储的需求。
【已完成】允许强制关闭服务器的IP地址XFF解析功能（IP.xff=disable），从而有效避免访问者利用XFF请求头伪造其IP地址（注意：如果已使用了反向代理技术，则不可禁用该功能）。
【已完成】允许用户根据自身的实际需求和使用环境选择强制禁用服务器的“打包下载”功能（download.zip=disable）。
【已完成】允许用户根据自身的实际需求和使用环境选择强制禁用服务器的“在线解码”功能（video.ffmpeg=disable）。
【已完成】优化了日志功能中的异常记录机制，增加了对异常堆栈信息的记录，以便开发者和维护人员能够通过日志信息获取到更加详细的异常信息。
【已完成】修复了“移动”操作在日志记录中“NEW PATH”（目标路径）项记录不正确的问题。
【已完成】修复了图片预览功能无法正常播放大体积GIF图片的问题。
【已完成】优化了当前端页面的显示机制，解决了当文件或文件夹名称中含有特殊字符时可能会出现的一些问题。
【已完成】优化了文件系统，进一步增强其稳定性和安全性。
【已完成】进一步完善了《kiftd说明文档》，新增了关于“设置页面背景图片”和“备份文件系统数据”的相关介绍。

已完成 v1.0.28
--------------
【已完成】修正了部分启动命令提示信息描述不正确的问题。
【已完成】优化了系统运行时的终端输出内容，避免输出信息过于杂乱影响命令操作。
【已完成】进一步完善了命令模式下“文件管理”功能，进一步优化其命令检验和提示机制，方便使用者进行日常操作。
【已完成】进一步完善了文件系统数据效验机制，更好地保证其“整洁”、稳定和健壮。
【已完成】进一步完善了登录操作的等待效果。

已完成 v1.0.29
--------------
【已完成】众多用户期待已久的“复制”功能正式加入——现在，用户可以对网盘中的文件进行“复制-粘贴”操作了。
【已完成】“上传文件夹”功能现已兼容Safari浏览器——使用桌面版Safari浏览器的用户也能使用该功能轻松地上传文件夹了。
【已完成】进一步优化了歌曲信息的解析机制，提高对音乐歌手名解析的正确率。
【已完成】进一步优化了全局搜索机制——在“详细信息”内能够显示搜索结果的统计信息。
【已完成】进一步优化了“永久资源链接”的复制链接功能，确保复制后的链接能够被主流浏览器及下载工具正确识别。
【已完成】进一步完善文本预览功能——当目标文件无法正常打开时，会显示提示信息。
【已完成】进一步增强了“自由注册新账户”功能的安全性，禁止用户使用某些非法的账户名进行注册。
【已完成】修复了在某些情况下音乐播放功能无法正确显示列表中第一首歌的歌词的问题。
【已完成】修复了在非x86环境下使用自定义ffmpeg视频解码引擎后可能会导致“在线播放”功能出现异常的问题。
【已完成】修复了上传文件夹功能无法上传Unix/Linux系统中的隐藏文件夹（以“.”开头）的问题。
【已完成】修复了在“管理文件系统路径”窗口中修改文件系统存储路径时如果取消操作可能会导致所有按钮无法回弹的问题。
【已完成】修复了上传文件和上传文件夹功能在取消时会互相冲突的问题。
【已完成】修复了一些情况下快捷键会失效或功能异常的问题。
【已完成】其他一些细节优化。

已完成 v1.0.30
--------------
【已完成】修复了“自由注册新账户”及“用户修改账户密码”功能中存在的一个安全性漏洞。
【已完成】进一步完善了服务器配置文件的效验机制，完善提示信息。

已完成 v1.0.31
--------------
【已完成】进一步完善了文件上传机制，使其能够正确识别一些含有Unix特殊字符的文件名。
【已完成】进一步完善了账户登录认证机制，使其能够正确识别某些含有特殊字符账户名。
【已完成】其他一些细节优化。

已完成 v1.0.32
--------------
【已完成】解决了当文件名中含有空格时，Firefox浏览器无法正确解析下载文件名的问题。
【已完成】解决了当文件或文件夹的名称中含有引号时，文件系统无法正确识别的问题。

已完成 v1.0.33
--------------
【已完成】修复了”图片预览“功能中存在的一个HTML注入安全性漏洞。
【已完成】进一步完善了文件系统对于特殊符号的处理。

已完成 v1.0.34
--------------
【已完成】完善了文件系统——确保当上传的文件夹中含有特殊字符时，如果上传路径中存在重名文件夹，选择“保留两者”时能够正确上传。
【已完成】修复了“上传文件夹”功能中存在的一个非法命名漏洞。
【已完成】其他一些细节优化。

已完成 v1.0.35
--------------
【已完成】修复了当用户执行批量文件上传操作时，如果中途切换浏览的文件夹可能会导致后续上传的目标文件夹不正确的问题。
【已完成】升级了内置的MySQL数据库驱动版本，修复旧版本中存在的安全漏洞（CVE-2019-2692）。

==============
2021.03.31 开始对原项目进行改造
==============

STEP：MyBatis + MySQL 重构

_._2021.03.31_._
浏览程序代码，完善、定制设计
确定实体类，整理实体关系，构建 model 包

_._2021.04.01_._
建立 dao 包，建立数据库
建立基础程序结构，启动容器、跑通 JUnit 测试

_._2021.04.06_._
完善 dao 包，建立多数据源基础配置
Druid 多数据源配置基本完成，CRUD 基本测试通过

